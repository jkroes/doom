(("~/.config/emacs/modules/completion/vertico/config.el" ((712 1017 "See https://github.com/minad/vertico/discussions/450. This is mostly irrelevant because of the small number of commands that use completing-read-multiple and because multiple candidates can be selected for other commands by combining embark-select and embark-act-all or using embark-collect" "  (defadvice! +vertico-crm-indicator-a (args)
    :filter-args #'completing-read-multiple
    (cons (format \"[CRM%s] %s\"
                  (replace-regexp-in-string
                   \"\\\\`\\\\[.*?]\\\\*\\\\|\\\\[.*?]\\\\*\\\\'\" \"\"
                   crm-separator)
                  (car args))
          (cdr args)))" 1 nil) (1105 1374 "When corfu is disabled, complete buffer symbols within the minibuffer via M-TAB. With corfu enabled, completion can still be transferred to the minibuffer via M-TAB if it is bound to +corfu/move-to-minibuffer. Aside from this, completion is available on TAB within commands that do not use completing-read such as eval-expression and evil-ex." "  (setq-default completion-in-region-function
                (lambda (&rest args)
                  (apply (if vertico-mode
                             #'consult-completion-in-region
                           #'completion--in-region)
                         args)))" 0 nil) (2064 2121 "Enable the vertico-repeat-select and vertico-repeat-last commands" "  (add-hook 'minibuffer-setup-hook #'vertico-repeat-save)" 0 nil) (2340 2512 "Make ffap-menu work with vertico" "  (defadvice! +vertico--suppress-completion-help-a (fn &rest args)
    :around #'ffap-menu-ask
    (letf! ((#'minibuffer-completion-help #'ignore))
      (apply fn args))))" 1 nil) (4589 4633 "Order is important within completion-styles. Orderless falls back to a later completion style once the current one no longer produces matches." "  (setq completion-styles '(orderless basic)" 0 nil) (8749 8774 "Switch to directory (consult-dir) and recursively find file within dir (consult-dir-jump-file). In particular, use when within the minibuffer. consult-dir will replace the prompt of any filepath-completing function with the selected dir!" "(use-package! consult-dir" 0 nil) (14157 14795 "Map commands to completion categories" "  (pushnew! marginalia-command-categories
            '(+default/find-file-under-here . file)
            '(doom/find-file-in-emacsd . project-file)
            '(doom/find-file-in-other-project . project-file)
            '(doom/find-file-in-private-config . file)
            '(doom/describe-active-minor-mode . minor-mode)
            '(flycheck-error-list-set-filter . builtin)
            '(persp-switch-to-buffer . buffer)
            '(projectile-find-file . project-file)
            '(projectile-recentf . project-file)
            '(projectile-switch-to-buffer . buffer)
            '(projectile-switch-project . project-file)))" 1 nil)) "7b76f754417adc2651d00bf8f9948228") ("~/.config/doom/modules/completion/corfu/config.el" ((4742 4936 "When `corfu-preview-current' has the value `insert', the candidate is automatically inserted on \"further input\" and corfu quits. Presumably this refers to any keys aside from ones bound to a corfu-command. This explains why, when a candidate is selected, a key bound to `corfu-quit' won't insert the candidate, but pressing <escape> will. If a candidate is not selected, however, corfu will not quit when <escape> is pressed without the following. To avoid redundant calls to `corfu-quit', this is only invoked when the corfu popup is visible." "  (add-hook 'evil-insert-state-exit-hook
            (cmd! (when (and (frame-live-p corfu--frame)
                             (frame-visible-p corfu--frame))
                    (corfu-quit))))" 0 nil)) "256a9530f0e3dc584f3e72619adfe33e") ("~/.config/doom/modules/editor/evil/config.el" ((2736 2758 "Allow the cursor to move beyond the end of the line so that you can enter insert mode at the end of the line using \"i\" instead of \"a\". Also fixes a lot of stuctural editing commands for lisp code." "evil-move-beyond-eol t" 1 nil) (13422 13459 "This sequence is rare in English and unlikely to be typed during editing. This also means we can increase the delay." "        evil-escape-key-sequence \"jj\"" 0 nil) (14662 14758 "Frees up e.g. \"s\" in devdocs buffers when using it with evil-collection" "  :hook (prog-mode . evil-snipe-override-local-mode)
  :hook (prog-mode . evil-snipe-local-mode)" 1 nil) (16714 16735 "Free up \"q\" in lots of modes" "      :n \"q\"      nil" 0 nil) (16736 16774 "Free up C-u for evil" "      \"M-u\"       #'universal-argument" 2 nil) (23657 23690 "This explicitly does not work with delete or change, so I only know of yS. What other operators are there?" "      :o \"S\" #'evil-Surround-edit" 1 nil)) "62c492981a99e9d1d4a77c9653e7d437"))